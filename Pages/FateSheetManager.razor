@page "/fate-sheet"
@using System.Text.Json
@using honksite.Shared;

<div class="sheetContainer">

    <div class="leftColumn" style="flex-direction: column; display: flex">
        <div class="card">
          <div class="container">
            <p>Placeholder for the "add aspect" card!</p> 
          </div>
        </div>
        @foreach (aspectclass anAspect in _playerSheet.aspectList) {
            <div class="cardHorizontal">
                <div class="container">
                    <p><input @bind="@anAspect.aspectName" style="width: 100%"/> </p>
                    <p><textarea @bind="@anAspect.aspectDescription" style="width: 100%; background-color: transparent"></textarea></p>
                </div>
            </div>
        }
        <div class="card">
          <div class="container">
            <p>Visual placeholder for where the aspects end</p> 
          </div>
        </div>
    </div>
    

    <div class="rightColumn" style="flex-direction: column; display: flex">
        <div class="cardVertical">
            <img src="https://cdn.discordapp.com/attachments/872160747306754058/992280957795188797/unknown.png">
          <div class="container">
            <input @bind="_playerSheet.name" style="width: 100%"/> 
            <p><textarea @bind="_playerSheet.description" style="width: 100%; background-color: transparent"></textarea></p> 
          </div>
        </div>
        <div class="card">
          <div class="container">
            <p>
                <input @bind="_saveLoadJson"/>
                <button @onclick="ExportToJson">[Export]</button>
                <button @onclick="ImportFromJson">[Import]</button>
                @_importError
            </p> 
          </div>
        </div>
    </div>
</div>
@code {

    private FATEsheet _playerSheet = new();
    
    private string _saveLoadJson = "";
    private string _importError = "Whoops doopsy, failed to import";

    private static readonly JsonSerializerOptions options = new(JsonSerializerDefaults.Web) { WriteIndented = true, IncludeFields = true };

    private void ExportToJson()
    {
        _saveLoadJson = JsonSerializer.Serialize(_playerSheet, typeof(FATEsheet), options);
    }

    private void ImportFromJson()
    {
        try 
        {
            _playerSheet = JsonSerializer.Deserialize<FATEsheet>(_saveLoadJson, options);
        }
        catch (JsonException e) 
        {
            _importError = e.Message;
        }
    }

}
